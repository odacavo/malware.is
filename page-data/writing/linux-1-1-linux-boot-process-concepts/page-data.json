{
    "componentChunkName": "component---src-templates-writing-post-js",
    "path": "/writing/linux-1-1-linux-boot-process-concepts",
    "result": {"data":{"markdownRemark":{"html":"<p>In this study series, I'll be following the <a href=\"https://www.comptia.jp/pdf/comptia-linux-xk0-004-exam-objectives.pdf\">CompTIA XK0-004 Linux+ Exam Objectives</a>. This writeup is under domain 1.0 - Hardware and System Configuration.</p>\n<h2>1.1 Explain Linux boot process concepts</h2>\n<h2>Boot loaders</h2>\n<p>In short, a boot loader is, by name, a program that is responsible for booting a computer. Think of a computer in the \"off\" state. The computer's entire OS, applications, and data are stored in <a href=\"https://en.wikipedia.org/wiki/Non-volatile_memory\">non-volatile memory</a> (internal hard drives, SSDs, etc.). Because of this, when a computer is powered on, the operating system is not loaded into the RAM in its initial state.</p>\n<p>It's the boot loader's job to load the operating system kernel into memory and execute it. The boot loader is the first piece of software program that runs when a computer starts up. Most modern bootloaders are two-stage: the first stage will load generic drivers and then call on the second stage (which is different depending on OS), which loads and executes the kernel. In multi-boot environments, the first stage of the boot loader will display a \"Choose your boot partition\" screen, and then execute the selected second-stage boot loader.</p>\n<p>To put it in context: First, the BIOS/UEFI is loaded and enumerates the hardware installed in the computer. Then, the BIOS/UEFI hands-off responsibilities to the boot loader to start the OS.</p>\n<h3>GRUB</h3>\n<p>GNU GRUB (short for <em>GNU <strong>GR</strong>and <strong>U</strong>nified <strong>B</strong>ootloader</em>, commonly referred to as GRUB) is a boot loader package from the <a href=\"https://www.gnu.org/\">GNU Project</a>. GRUB 2 has replaced what was formerly known as GRUB, which is now referred to as GRUB Legacy. GRUB is not actively developed any longer.</p>\n<p>The GRUB boot loader is compatible with booting a number of operating systems, such as:</p>\n<ul>\n<li>FreeBSD, NetBSD, OpenBSD, and GNU/Linux</li>\n<li>Proprietary OS such as most current Windows releases and OS/2 are supported via a <em>chain-loading function</em></li>\n</ul>\n<p><em>Chain-loading</em> is a technique that allows one bootloader to call another bootloader as if the system had just booted up. For example, when booting Windows, GRUB would initially load the Windows boot loader to then boot Windows.</p>\n<h3>GRUB2</h3>\n<p>GRUB2 was a completely revamped rewrite of the original GNU GRUB boot loader package to handle more modern OS requirements. GRUB2 has since become the primary bootloader for most major distributions of Linux.</p>\n<p>GRUB2 has a number of advantages over GRUB, including the following:</p>\n<ul>\n<li>Wider range of RAID and LVM storage compatibility</li>\n<li>Support for newer UEFI systems and non-x86 based architectures</li>\n<li>Live boot support, ISO image support</li>\n</ul>\n<h2>Boot options</h2>\n<h3>UEFI/EFI</h3>\n<h3>PXE</h3>\n<h3>NFS</h3>\n<h3>Boot from ISO</h3>\n<h3>Boot from HTTP/FTP</h3>\n<h2>File locations</h2>\n<h3>/etc/default/grub</h3>\n<h3>/etc/grub2.cfg</h3>\n<h3>/boot</h3>\n<h3>/boot/grub</h3>\n<h3>/boot/grub2</h3>\n<h3>/boot/efi</h3>\n<h2>Boot modules and files</h2>\n<h3>Commands</h3>\n<h3>mkinitrd</h3>\n<h3>dracut</h3>\n<h3>grub2-install</h3>\n<h3>grub2-mkconfig</h3>\n<h3>initramfs</h3>\n<h3>efi files</h3>\n<h3>vmlinuz</h3>\n<h3>vmlinux</h3>\n<h2>Kernel panic</h2>\n<p><img src=\"/images/writing/linux-1-1-linux-boot-process-concepts/kernel_panic.jpg\" alt=\"Kernel panic!\"></p>\n<p>A kernel panic is a safety measure an operating system takes when it detects an internal failure in which the OS is unable to safely recover from. The term mostly relates to Unix systems - for Microsoft Windows, you can think of the equivalency of the <a href=\"https://en.wikipedia.org/wiki/Blue_screen_of_death\">Blue Screen of Death</a>.</p>\n<p>If a normal program crashes on your PC, you'll likely be able to keep using your computer. The kernel is able to manage the crash appropriately and recover. However, if the kernel itself crashes and can't figure out how to recover, it has no option but to enter a kernel panic and reboot.</p>\n<p>When a kernel panic occurs, the kernel outputs an error message to the console, dumps kernel memory to disk, and either waits for the system to be manually rebooted, or initiates an automatic reboot. The error information is often highly technical, and can be used in a post-mortem analysis to diagnose the root cause of the issue.</p>","frontmatter":{"date":"Jan 20, 2022","title":"Linux+ 1.1 - Linux Boot Process Concepts","tags":["linux+","comptia"],"description":"One of my main 2022 goals is to vastly expand my proficiency with Linux. Join me as I document my learning journey. Today's objective: Linux Boot Process Concepts"},"timeToRead":3}},"pageContext":{"slug":"linux-1-1-linux-boot-process-concepts"}},
    "staticQueryHashes": []}