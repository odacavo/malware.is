import React from 'react'
import { graphql, Link } from 'gatsby'
import { Helmet } from 'react-helmet';

//Layout
import Main from "../layouts/Main.js"

//CSS
import * as styles from '../css/components/writing/writinglist.module.css'

export default function WritingTag({ data, pageContext }) {

  const writing = data.allMarkdownRemark.nodes

    return (
        <Main>
            <Helmet>
              <title>{pageContext.writingtag} - malware.is</title>
            </Helmet>
           <h2>üè∑Ô∏è {pageContext.writingtag}</h2>
           <span className={styles.breadcrumb}><Link to="/writing">Writing</Link> &#8250; <Link to="/writing/tags">Tags</Link> &#8250; <span className={styles.breadcrumbCurrent}>{pageContext.writingtag}</span></span>
       

           <div>
            <ul className={styles.writingList}>

                {writing.map(post => (
                <li key={post.id}>
                    <Link to={"/writing/" + post.frontmatter.slug}><h3>{post.frontmatter.title}</h3></Link>
                    <time>{post.frontmatter.date}</time>
                    <p>{post.frontmatter.description}</p>
                    <p>Tags: {post.frontmatter.tags.map((tag, i) => [
                      <span key={i}><Link to={"/writing/tags/" + tag}>
                        {tag}
                        </Link>
                        {i < post.frontmatter.tags.length - 1 ? ', ' : ''}
                      </span>
                    ])}</p>
                </li>
                ))}

            </ul>
        </div>
        </Main>
    )
}


export const query = graphql`
query TagSearch($writingtag: String) {
  allMarkdownRemark(
    filter: {frontmatter: {tags: {eq: $writingtag}}, fileAbsolutePath: {regex: "/(writing)/"}}
    sort: {order: DESC, fields: frontmatter___date}
  ) {
    nodes {
      frontmatter {
        title
        date(formatString: "MMM DD, YYYY")
        description
        tags
        slug
      }
      id
    }
  }
}  
`
